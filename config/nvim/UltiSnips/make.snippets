### [b] = must be the first word on line
### [i] = expand snippet regardless of preceding characters

snippet epitech "Epitech standard Makefile" [b]
CC =            gcc
RM =            @rm -vf

SRC_DIR =       ${1}
SRC =           ${2}

OBJ =           $(SRC:.c=.o)

override CFLAGS +=  -Iinclude -Wall -Wextra -Wshadow
override LDFLAGS += ${3}

NAME =          ${4}

all: $(NAME)

$(NAME): $(OBJ)
	$(CC) -o $(NAME) $(OBJ) $(LDFLAGS)

clean:
	$(RM) $(OBJ)
	$(MAKE) -C tests clean

fclean: clean
	$(RM) $(NAME)
	$(MAKE) -C tests fclean

re: fclean all

tests_run:
	$(MAKE) -C tests tests_run

.PHONY: all clean fclean re tests_run
endsnippet

snippet criterion "Epitech criterion Makefile" [b]
CC =            gcc
RM =            @rm -vf

SRC_DIR =       $(realpath ../src)
SRC =           ${1}

SRC_UT_DIR =    $(realpath .)
SRC_UT =        ${2}

OBJ =           $(SRC:.c=.o) $(SRC_UT:.c=.o)
GCOVFILES =     $(SRC:.c=.gcda) $(SRC:.c=.gcno) \
                $(SRC_UT:.c=.gcda) $(SRC_UT:.c=.gcno)

CFLAGS +=       -I../include -Wall -Wextra -Wshadow --coverage
LDFLAGS +=      -lcriterion -lgcov

NAME =          unit_tests

all: tests_run

tests_run: build_sources $(NAME)
	./$(NAME)

build_sources:
	$(MAKE) -C .. CFLAGS=--coverage "LDFLAGS=-lgcov --coverage"

$(NAME): $(OBJ)
	$(CC) -o $(NAME) $(OBJ) $(LDFLAGS)

clean:
	$(RM) $(OBJ)

fclean: clean
	$(RM) $(NAME)
	$(RM) $(GCOVFILES)

re: fclean all

.PHONY: all clean fclean re tests_run build_sources
endsnippet
